name: JDK 25 Compatibility Tracking

on:
  schedule:
    # Run every day at 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual triggers
    inputs:
      full_scan:
        description: 'Run full scan instead of incremental'
        required: false
        type: boolean
        default: false
      plugin_list_mode:
        description: 'Plugin list mode'
        required: false
        type: choice
        options:
          - top-250
          - all
        default: 'top-250'

permissions:
  contents: write  # Need write permission to commit results

jobs:
  track-jdk25:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for git operations

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq parallel git

          # Install GitHub CLI
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install gspread google-auth pandas openpyxl

      - name: Set up Google Service Account credentials
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          echo "$GOOGLE_CREDENTIALS" > concise-complex-344219-062a255ca56f.json
          chmod 600 concise-complex-344219-062a255ca56f.json

      - name: Download Jenkins plugins data
        run: |
          echo "Downloading latest Jenkins plugin registry..."

          # Download with redirects and show errors
          if ! curl -L -f -o plugins.json https://updates.jenkins.io/current/update-center.actual.json; then
            echo "❌ Failed to download Jenkins plugin registry"
            exit 1
          fi

          # Validate downloaded file
          FILE_SIZE=$(stat -c%s plugins.json 2>/dev/null || stat -f%z plugins.json 2>/dev/null)
          echo "Downloaded file size: $FILE_SIZE bytes"

          if [ "$FILE_SIZE" -lt 100000 ]; then
            echo "❌ Downloaded file is too small ($FILE_SIZE bytes)"
            echo "Expected file size: several MB"
            echo "First 500 characters of downloaded file:"
            head -c 500 plugins.json
            exit 1
          fi

          # Validate JSON format
          if ! jq empty plugins.json 2>/dev/null; then
            echo "❌ Downloaded file is not valid JSON"
            echo "First 500 characters of downloaded file:"
            head -c 500 plugins.json
            exit 1
          fi

          echo "✓ Successfully downloaded and validated plugin registry ($FILE_SIZE bytes)"

          # Generate plugin list based on mode
          PLUGIN_MODE="${{ github.event.inputs.plugin_list_mode || 'top-250' }}"
          echo "Plugin list mode: $PLUGIN_MODE"

          if [ "$PLUGIN_MODE" = "all" ]; then
            echo "Generating all plugins list (~2036 plugins)..."
            chmod +x get-all-plugins.sh
            ./get-all-plugins.sh
          else
            echo "Generating top 250 plugins list..."
            ./get-most-popular-plugins.sh
          fi

      - name: Find previous results
        id: previous
        run: |
          # Find the most recent tracking results
          LATEST=$(ls -t reports/jdk25_tracking_with_prs_*.json 2>/dev/null | head -1 || echo "")
          if [ -n "$LATEST" ]; then
            echo "previous_file=$LATEST" >> $GITHUB_OUTPUT
            echo "Found previous results: $LATEST"
          else
            echo "previous_file=" >> $GITHUB_OUTPUT
            echo "No previous results found, will run full scan"
          fi

      - name: Run JDK 25 detection (incremental)
        if: github.event.inputs.full_scan != 'true' && steps.previous.outputs.previous_file != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PLUGIN_LIST_MODE: ${{ github.event.inputs.plugin_list_mode || 'top-250' }}
          RATE_LIMIT_DELAY: 2
          DEBUG_MODE: false
        run: |
          echo "Running incremental scan..."
          chmod +x check-jdk25-with-pr-incremental.sh
          ./check-jdk25-with-pr-incremental.sh "${{ steps.previous.outputs.previous_file }}"

      - name: Run JDK 25 detection (full scan)
        if: github.event.inputs.full_scan == 'true' || steps.previous.outputs.previous_file == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PLUGIN_LIST_MODE: ${{ github.event.inputs.plugin_list_mode || 'top-250' }}
          RATE_LIMIT_DELAY: 2
          DEBUG_MODE: false
        run: |
          echo "Running full scan..."
          chmod +x check-jdk25-with-pr.sh
          ./check-jdk25-with-pr.sh

      - name: Get current date
        id: date
        run: echo "date=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Detect open PRs adding JDK 25
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PLUGIN_LIST_MODE: ${{ github.event.inputs.plugin_list_mode || 'top-250' }}
          RATE_LIMIT_DELAY: 2
          DEBUG_MODE: false
        run: |
          echo "Detecting open PRs that add JDK 25..."
          chmod +x check-jdk25-open-prs.sh
          ./check-jdk25-open-prs.sh || {
            echo "⚠️ Open PRs detection failed, continuing with merged PRs only"
            exit 0
          }

      - name: Update Google Spreadsheet
        env:
          JDK25_SPREADSHEET_ID: ${{ secrets.JDK25_SPREADSHEET_ID }}
          GOOGLE_APPLICATION_CREDENTIALS: concise-complex-344219-062a255ca56f.json
        run: |
          chmod +x update_jdk25_spreadsheet_enhanced.py

          REPORT_FILE="reports/jdk25_tracking_with_prs_${{ steps.date.outputs.date }}.json"
          OPEN_PRS_FILE="reports/jdk25_open_prs_tracking_${{ steps.date.outputs.date }}.json"

          if [ -f "$REPORT_FILE" ]; then
            if [ -f "$OPEN_PRS_FILE" ]; then
              echo "Updating spreadsheet with merged and open PRs data"
              ./update_jdk25_spreadsheet_enhanced.py "$REPORT_FILE" "$OPEN_PRS_FILE"
            else
              echo "Open PRs file not found, updating with merged PRs only"
              ./update_jdk25_spreadsheet_enhanced.py "$REPORT_FILE"
            fi
          else
            echo "Error: Report file not found: $REPORT_FILE"
            exit 1
          fi

      - name: Run validation
        if: always()
        run: |
          chmod +x validate_jdk25_detection.py

          REPORT_FILE="reports/jdk25_tracking_with_prs_${{ steps.date.outputs.date }}.json"
          MANUAL_CSV="Java_25_Compatibility_check.csv"

          echo "Checking validation prerequisites..."
          echo "  Report file: $REPORT_FILE"
          echo "  Manual CSV: $MANUAL_CSV"

          if [ ! -f "$REPORT_FILE" ]; then
            echo "⚠️ Report file not found: $REPORT_FILE"
            echo "Validation requires the automated tracking results."
            exit 0
          fi

          if [ ! -f "$MANUAL_CSV" ]; then
            echo "ℹ️ Skipping validation - manual CSV not available in CI"
            echo "The validation script compares automated results against manual tracking."
            echo "To run validation locally, export the manual spreadsheet as CSV first."
            exit 0
          fi

          echo "✓ All prerequisites met, running validation..."
          ./validate_jdk25_detection.py "$REPORT_FILE" || true

      - name: Generate summary
        if: always()
        run: |
          echo "## JDK 25 Tracking Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "**Plugin List Mode:** ${{ github.event.inputs.plugin_list_mode || 'top-250' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          REPORT_FILE="reports/jdk25_tracking_with_prs_${{ steps.date.outputs.date }}.json"
          OPEN_PRS_FILE="reports/jdk25_open_prs_tracking_${{ steps.date.outputs.date }}.json"

          if [ -f "$REPORT_FILE" ]; then
            TOTAL=$(jq 'length' "$REPORT_FILE")
            JDK25_COUNT=$(jq '[.[] | select(.has_jdk25 == true)] | length' "$REPORT_FILE")
            WITH_PR=$(jq '[.[] | select(.has_jdk25 == true and .jdk25_pr.url != "")] | length' "$REPORT_FILE")
            MERGED=$(jq '[.[] | select(.has_jdk25 == true and .jdk25_pr.is_merged == true)] | length' "$REPORT_FILE")

            echo "### Merged PRs Results" >> $GITHUB_STEP_SUMMARY
            echo "- **Total plugins scanned:** $TOTAL" >> $GITHUB_STEP_SUMMARY
            echo "- **Plugins with JDK 25:** $JDK25_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "- **With PR identified:** $WITH_PR" >> $GITHUB_STEP_SUMMARY
            echo "- **With merged PR:** $MERGED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # List new plugins with JDK 25 (if any)
            echo "### Plugins with JDK 25" >> $GITHUB_STEP_SUMMARY
            jq -r '.[] | select(.has_jdk25 == true) | "- [\(.plugin)](\(.url)) - PR: \(.jdk25_pr.url // "Not found") (Merged: \(.jdk25_pr.is_merged))"' "$REPORT_FILE" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Report file not found" >> $GITHUB_STEP_SUMMARY
          fi

          # Add open PRs summary if available
          if [ -f "$OPEN_PRS_FILE" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Open PRs Results" >> $GITHUB_STEP_SUMMARY

            OPEN_TOTAL=$(jq 'length' "$OPEN_PRS_FILE")
            REPOS_WITH_OPEN=$(jq '[.[] | select(.has_open_jdk25_prs == true)] | length' "$OPEN_PRS_FILE")
            TOTAL_OPEN_PRS=$(jq '[.[] | select(.has_open_jdk25_prs == true) | .open_jdk25_prs] | flatten | length' "$OPEN_PRS_FILE")
            DRAFT_COUNT=$(jq '[.[] | select(.has_open_jdk25_prs == true) | .open_jdk25_prs[] | select(.isDraft == true)] | length' "$OPEN_PRS_FILE")

            echo "- **Repositories with open PRs adding JDK 25:** $REPOS_WITH_OPEN" >> $GITHUB_STEP_SUMMARY
            echo "- **Total open PRs:** $TOTAL_OPEN_PRS" >> $GITHUB_STEP_SUMMARY
            echo "- **Draft PRs:** $DRAFT_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "- **Regular PRs:** $((TOTAL_OPEN_PRS - DRAFT_COUNT))" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # List repositories with open PRs
            if [ "$REPOS_WITH_OPEN" -gt 0 ]; then
              echo "### Repositories with Open PRs" >> $GITHUB_STEP_SUMMARY
              jq -r '.[] | select(.has_open_jdk25_prs == true) | "- **[\(.plugin)](\(.url))** - \(.open_jdk25_prs | length) open PR(s)"' "$OPEN_PRS_FILE" >> $GITHUB_STEP_SUMMARY
            fi
          fi

      - name: Commit and push results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Add generated files
          git add reports/jdk25_tracking_with_prs_*.json || true
          git add reports/jdk25_tracking_with_prs_*.csv || true
          git add reports/jdk25_open_prs_tracking_*.json || true
          git add reports/jdk25_open_prs_tracking_*.csv || true
          git add logs/ || true
          git add validated_jdk25_plugins.txt || true

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit \
              -m "chore: update JDK 25 tracking data - $(date +%Y-%m-%d)" \
              -m "Automated update from GitHub Actions" \
              -m "Includes merged and open PRs tracking" \
              -m "[skip ci]"
            git push
          fi

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jdk25-tracking-results-${{ steps.date.outputs.date }}
          path: |
            reports/jdk25_tracking_with_prs_*.json
            reports/jdk25_tracking_with_prs_*.csv
            reports/jdk25_open_prs_tracking_*.json
            reports/jdk25_open_prs_tracking_*.csv
            logs/jdk25_tracking_*.log
            logs/jdk25_open_prs_*.log
          retention-days: 90

      - name: Clean up credentials
        if: always()
        run: |
          rm -f concise-complex-344219-062a255ca56f.json
